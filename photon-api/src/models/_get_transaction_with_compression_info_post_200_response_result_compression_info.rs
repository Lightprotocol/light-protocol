/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.28.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTransactionWithCompressionInfoPost200ResponseResultCompressionInfo {
    #[serde(rename = "closedAccounts")]
    pub closed_accounts: Vec<models::AccountWithOptionalTokenData>,
    #[serde(rename = "openedAccounts")]
    pub opened_accounts: Vec<models::AccountWithOptionalTokenData>,
}

impl GetTransactionWithCompressionInfoPost200ResponseResultCompressionInfo {
    pub fn new(
        closed_accounts: Vec<models::AccountWithOptionalTokenData>,
        opened_accounts: Vec<models::AccountWithOptionalTokenData>,
    ) -> GetTransactionWithCompressionInfoPost200ResponseResultCompressionInfo {
        GetTransactionWithCompressionInfoPost200ResponseResultCompressionInfo {
            closed_accounts,
            opened_accounts,
        }
    }
}
