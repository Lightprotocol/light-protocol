/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.26.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// GetCompressedAccountPostRequestParams : Request for compressed account data
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCompressedAccountPostRequestParams {
    /// A Solana public key represented as a base58 string.
    #[serde(
        rename = "address",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub address: Option<Option<String>>,
    /// A 32-byte hash represented as a base58 string.
    #[serde(
        rename = "hash",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub hash: Option<Option<String>>,
}

impl GetCompressedAccountPostRequestParams {
    /// Request for compressed account data
    pub fn new() -> GetCompressedAccountPostRequestParams {
        GetCompressedAccountPostRequestParams {
            address: None,
            hash: None,
        }
    }
}
