pragma circom 2.0.0;
include "../node_modules/circomlib/circuits/poseidon.circom";
include "./merkleProof.circom";
include "./keypair.circom";
include "../node_modules/circomlib/circuits/gates.circom";
include "../node_modules/circomlib/circuits/comparators.circom";

// will create a new instance of the circuit
#[instance]
{
    fileName: MockVerifierTransaction,
    config(),
    nrAppUtoxs: 1,
    publicInputs: [currentSlot]
}

#[lightTransaction(verifierTwo)]
template mockVerifierTransaction() {
    /**
    * -------------------------- Application starts here --------------------------
    */
    // defines the data which is saved in the utxo
    // this data is defined at utxo creation
    // is checked that only utxos with instructionData = hash or 0
    // exist in input utxos
    // is outside instruction
    // could add signal inputs automatically for these
    // are private inputs
    #[utxoData]
    {
        releaseSlot
    }
    signal input currentSlot;
    currentSlot === releaseSlot;
}
// throw error when no utxoData -> doesn't make sense
// throw error if is declared twice
// throw error when there is no #[instance]
// throw error when there is no #[lightTransaction(verifierTwo)]
