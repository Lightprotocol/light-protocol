on:
  push:
    branches:
      - main
    paths:
      - "programs/**"
      - "program-tests/**"
      - "program-libs/**"
      - "merkle-tree/**"
      - ".github/workflows/light-system-programs-tests.yml"
      - "test-utils/**"
  pull_request:
    branches:
      - "*"
    paths:
      - "programs/**"
      - "program-tests/**"
      - "program-libs/verifier/**"
      - "merkle-tree/**"
      - ".github/workflows/light-system-programs-tests.yml"
      - "test-utils/**"
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

name: system-programs-examples-tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  system-programs:
    name: system-programs
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        include:
          - program: sdk-test-program
            sub-tests: '["cargo-test-sbf -p sdk-test"]'
          - program: account-compression
            sub-tests: '["cargo-test-sbf -p account-compression-test"]'
          - program: light-system-program
            sub-tests: '["cargo-test-sbf -p system-test"]'
          - program: light-registry
            sub-tests: '["cargo-test-sbf -p registry-test"]'
          - program: light-compressed-token
            sub-tests: '["cargo-test-sbf -p compressed-token-test"]'
          - program: system-cpi-test
            sub-tests: '["cargo-test-sbf -p system-cpi-test"]'
          - program: random-e2e-test
            sub-tests: '["cargo-test-sbf -p e2e-test"]'
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup and build
        uses: ./.github/actions/setup-and-build

      - name: Build CLI
        run: |
          source ./scripts/devenv.sh
          npx nx build @lightprotocol/zk-compression-cli

      - name: build-programs
        run: |
          source ./scripts/devenv.sh
          anchor build
          npx nx build @lightprotocol/program-tests

      - name: ${{ matrix.program }}
        run: |
          source ./scripts/devenv.sh

          IFS=',' read -r -a sub_tests <<< "${{ join(fromJSON(matrix['sub-tests']), ', ') }}"
          for subtest in "${sub_tests[@]}"
          do
            echo "$subtest"
            eval "RUSTFLAGS=\"-D warnings\" $subtest"
          done
