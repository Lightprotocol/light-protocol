on:
  push:
    branches:
      - main
    paths:
      - "programs/**"
      - ".github/workflows/light-system-programs-tests.yml"
  pull_request:
    branches:
      - main
    paths:
      - "programs/**"
      - ".github/workflows/light-system-programs-tests.yml"
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

name: system-programs-psp-examples-tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  system-programs:
    name: system-programs
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - program: account-compression
            sub-tests: '[
              "cargo-test-sbf -p account-compression"
            ]'
          - program: light-compressed-pda
            sub-tests: '[
              "cargo-test-sbf -p light-compressed-pda -- --test-threads=1"
            ]'
          - program: light-registry
            sub-tests: '[
              "cargo-test-sbf -p light-registry"
            ]'
          - program: light-compressed-token
            sub-tests: '[
              "cargo-test-sbf -p light-compressed-token -- --test-threads=1"
            ]'
          - program: token-escrow
            sub-tests: '[
              "cargo-test-sbf -p token-escrow"
            ]'
          - program: program-owned-account-test
            sub-tests: '[
              "cargo-test-sbf -p program-owned-account-test -- --test-threads=1"
            ]'

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup and build
        uses: ./.github/actions/setup-and-build

      - name: ${{ matrix.program }}
        run: |
          source ./scripts/devenv.sh   
          mkdir -p ./target/deploy
          wget https://github.com/Lightprotocol/light-protocol/releases/download/spl-noop-v0.2.0/spl_noop.so -O ./target/deploy/spl_noop.so   

          anchor build

          IFS=',' read -r -a sub_tests <<< "${{ join(fromJSON(matrix['sub-tests']), ', ') }}"
          for subtest in "${sub_tests[@]}"
          do
            echo "$subtest"
            eval "$subtest"
          done
