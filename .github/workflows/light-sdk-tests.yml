on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened

name: light-sdk-tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  light-sdk-tests:
    name: light-sdk-tests
    if: github.event.pull_request.draft == false
    runs-on: buildjet-16vcpu-ubuntu-2204
    strategy:
      matrix:
        include:
          - name: sdk-tests-light-relayer-cli
            atomic-transactions: true
            sub-tests: '[
              "@lightprotocol/cli:test",
              "@lightprotocol/prover.js:test"
            ]'
          - name: sdk-tests-cli-no-atomic-tx
            atomic-transactions: false
            sub-tests: '["@lightprotocol/cli:test-cli"]'
          - name: circuit-tests
            atomic-transactions: true
            sub-tests: '[
              "@lightprotocol/circuit-lib.js:test",
              "@lightprotocol/circuit-lib.circom:test",
              "@lightprotocol/relayer:test"]'
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup and build
        uses: ./.github/actions/setup-and-build
        with:
          atomic-transactions: ${{ matrix.atomic-transactions }}

      - name: Install Playwright Browsers
        shell: bash
        run: npx playwright install --with-deps

      - name: ${{ matrix.name }}
        env:
          LIGHT_PROTOCOL_ATOMIC_TRANSACTIONS: ${{ matrix.atomic-transactions }}
        run: |
          source ./scripts/devenv.sh

          IFS=', ' read -r -a sub_tests <<< "${{ join(fromJSON(matrix['sub-tests']), ', ') }}"
          for subtest in "${sub_tests[@]}"
          do
            npx nx run $subtest
          done

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Run Relayer Docker build test
        if: matrix.name == 'circuit-tests'
        run: ./scripts/testDockerRelayer.sh

      - name: Log out
        run: docker logout
