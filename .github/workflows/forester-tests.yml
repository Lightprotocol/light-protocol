name: forester-tests

permissions:
  contents: read

on:
  push:
    branches: [main]
    paths:
      - "forester/**"
      - "forester-utils/**"
      - "sdk-libs/photon-api/**"
      - "programs/**"
      - "program-libs/batched-merkle-tree/**"
      - "scripts/**"
      - ".github/workflows/forester-tests.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "forester/**"
      - "forester-utils/**"
      - "sdk-libs/photon-api/**"
      - "programs/**"
      - "program-libs/batched-merkle-tree/**"
      - "scripts/**"
      - ".github/workflows/forester-tests.yml"
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: "1"
  RUSTFLAGS: "--cfg tokio_unstable -D warnings"
  TEST_MODE: "local"
  TEST_V1_STATE: "true"
  TEST_V2_STATE: "true"
  TEST_V1_ADDRESS: "true"
  TEST_V2_ADDRESS: "true"

jobs:
  test:
    name: Forester e2e test
    runs-on: warp-ubuntu-latest-x64-4x
    timeout-minutes: 45

    services:
      redis:
        image: redis:8.0.1
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      REDIS_URL: redis://localhost:6379

    steps:
      - uses: actions/checkout@v4

      - name: Setup and build
        uses: ./.github/actions/setup-and-build
        with:
          skip-components: "redis"

      - name: Clean build artifacts before tests
        shell: bash
        run: |
          cargo clean
          rm -rf target/debug/deps/*

      - name: Check available disk space
        shell: bash
        run: |
          df -h /
          du -sh /home/runner/work/* | sort -hr | head -n 10

      - name: Build CLI
        run: |
          source ./scripts/devenv.sh
          npx nx build @lightprotocol/zk-compression-cli

      - name: Build test program
        run: |
          source ./scripts/devenv.sh
          cargo test-sbf -p create-address-test-program

      - name: Test
        run: |
          source ./scripts/devenv.sh
          cargo test --package forester e2e_test -- --nocapture
