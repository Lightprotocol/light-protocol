name: Release programs

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup and build
        uses: ./.github/actions/setup-and-build

      - name: Extract crate name from tag
        id: extract-crate
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          CRATE_NAME=$(echo $TAG_NAME | rev | cut -d'-' -f2- | rev)

          if [ "$CRATE_NAME" == *"light-merkle-tree-program"* ]; then
            SO_FILE="light_merkle_tree_program.so"
          elif [ "$CRATE_NAME" == *"light-psp2in2out"* ]; then
            SO_FILE="light_psp2in2out.so"
          elif [ "$CRATE_NAME" == *"light-psp10in2out"* ]; then
            SO_FILE="light_psp10in2out.so"
          elif [ "$CRATE_NAME" == *"light-psp4in4out-app-storage"* ]; then
            SO_FILE="light_psp4in4out_app_storage.so"
          elif [ "$CRATE_NAME" == *"light-psp2in2out-storage"* ]; then
            SO_FILE="light_psp2in2out_storage.so"
          fi
          echo "crate=$CRATE_NAME" >> $GITHUB_OUTPUT
          echo "so-file=$SO_FILE" >> $GITHUB_OUTPUT

      - name: Prepare artifacts
        run: |
          cp target/deploy/light_merkle_tree_program.so .
          cp target/deploy/light_psp2in2out.so .
          cp target/deploy/light_psp10in2out.so .
          cp target/deploy/light_psp4in4out_app_storage.so .
          cp target/deploy/light_psp2in2out_storage.so .
          cp third-party/solana-program-library/spl_noop.so .

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.PAT_TOKEN }}
          files: |
            ${{ steps.extract-crate.outputs.so-file }}

      - name: Run cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo publish -p ${{ steps.extract-crate.outputs.crate }} --token $CARGO_REGISTRY_TOKEN
