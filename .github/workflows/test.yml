on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: test

jobs:
  test:
    strategy:
      fail-fast: true # In case one of the jobs fails, the other jobs will be cancelled
      matrix:
        runs-on:
          - buildjet-4vcpu-ubuntu-2204
    name: Test - ${{matrix.runs-on}}
    runs-on: ${{matrix.runs-on}}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          path: light-protocol-onchain
          submodules: true
          token: ${{ secrets.PAT_TOKEN }}

      - name: Install stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install nightly Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install Typescript
        run: |
          npm i -g typescript

      - name: Install Light Protocol toolchain
        run: |
          curl -s https://raw.githubusercontent.com/Lightprotocol/install/main/light-protocol-install.sh \
            | bash -s -- --no-prompt
      
      - name: Add Light Protocol toolchain to PATH
        run: |
          echo "$HOME/.local/light-protocol/bin" >> $GITHUB_PATH

      - run: |
          solana-keygen new --no-bip39-passphrase
          
      - name: Create env file
        working-directory: light-protocol-onchain
        run: |
          cd relayer
          touch .env
          echo KEY_PAIR=${{ secrets.KEY_PAIR }} > .env
          echo RELAYER_RECIPIENT=${{ secrets.RELAYER_RECIPIENT }} >> .env
          echo LOOK_UP_TABLE=${{ secrets.LOOK_UP_TABLE }} >> .env
          echo TEST_ENVIROMENT=${{ secrets.TEST_ENVIROMENT }} >> .env

      - name: Run tests
        working-directory: light-protocol-onchain
        run: |
          ./build.sh
          ./test.sh
