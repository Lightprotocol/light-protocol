name: Setup and build
description: Checkout sources, install dependencies, build and prepare for tests

inputs:
  enable-redis:
    description: "Enable Redis"
    required: false
    default: false
  atomic-transactions:
    description: "Build Light Protocol with atomic transaction support"
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Cache Rust dependencies
      uses: buildjet/cache@v3
      with:
        path: |
          ~/.cargo
          **/target
        key: ${{ runner.os }}-cargo-${{ inputs.atomic-transactions }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache .local directory
      uses: buildjet/cache@v3
      with:
        path: .local
        key: ${{ runner.os }}-local-${{ inputs.atomic-transactions }}-${{ hashFiles('**/install.sh') }}

    - name: Install dependencies
      shell: bash
      run: |
        if [[ "${{ inputs.enable_redis }}" == "true" ]]; then
          ./scripts/install.sh --enable-redis
        else
          ./scripts/install.sh
        fi
        source ./scripts/devenv.sh

    - name: Setup pnpm
      uses: pnpm/action-setup@v2.4.0
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ inputs.atomic-transactions }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-${{ inputs.atomic-transactions }}-

    - name: Install pnpm dependencies
      shell: bash
      run: pnpm install
    
    - name: Build and prepare for tests
      shell: bash
      env:
        LIGHT_PROTOCOL_ATOMIC_TRANSACTIONS: ${{ inputs.atomic-transactions }}
      run: |
        source ./scripts/devenv.sh
        mkdir -p /home/runner/.config/solana/
        solana-keygen new --no-bip39-passphrase -o /home/runner/.config/solana/id.json
        npx nx build @lightprotocol/programs --skip-nx-cache
        npx nx build @lightprotocol/cli
