{
    "name": "@lightprotocol/stateless.js",
    "version": "0.13.0",
    "description": "JavaScript API for Light and ZK Compression",
    "sideEffects": false,
    "main": "dist/cjs/node/index.cjs",
    "type": "module",
    "exports": {
        ".": {
            "require": "./dist/cjs/node/index.cjs",
            "types": "./dist/types/index.d.ts",
            "default": "./dist/cjs/node/index.cjs"
        },
        "./browser": {
            "import": "./dist/es/browser/index.js",
            "require": "./dist/cjs/browser/index.cjs",
            "types": "./dist/types/index.d.ts"
        }
    },
    "types": "./dist/types/index.d.ts",
    "files": [
        "dist"
    ],
    "keywords": [
        "zk",
        "compression",
        "stateless",
        "solana"
    ],
    "maintainers": [
        {
            "name": "Light Protocol Maintainers",
            "email": "friends@lightprotocol.com"
        }
    ],
    "license": "Apache-2.0",
    "dependencies": {
        "@coral-xyz/anchor": "0.29.0",
        "@solana/web3.js": "^1.95.3",
        "@noble/hashes": "^1.5.0",
        "buffer": "^6.0.3",
        "superstruct": "^2.0.2",
        "tweetnacl": "^1.0.3"
    },
    "devDependencies": {
        "@lightprotocol/hasher.rs": "workspace:*",
        "@esbuild-plugins/node-globals-polyfill": "^0.2.3",
        "@lightprotocol/programs": "workspace:*",
        "@playwright/test": "^1.47.1",
        "@rollup/plugin-babel": "^6.0.4",
        "@rollup/plugin-commonjs": "^26.0.1",
        "@rollup/plugin-json": "^6.1.0",
        "@rollup/plugin-node-resolve": "^15.2.3",
        "@rollup/plugin-replace": "^5.0.7",
        "@rollup/plugin-terser": "^0.4.4",
        "@rollup/plugin-typescript": "^11.1.6",
        "@types/bn.js": "^5.1.5",
        "@types/node": "^22.5.5",
        "@typescript-eslint/eslint-plugin": "^7.13.1",
        "@typescript-eslint/parser": "^7.13.1",
        "eslint": "^8.56.0",
        "eslint-plugin-n": "^17.10.2",
        "eslint-plugin-promise": "^7.1.0",
        "eslint-plugin-vitest": "^0.5.4",
        "http-server": "^14.1.1",
        "playwright": "^1.47.1",
        "prettier": "^3.3.3",
        "rimraf": "^6.0.1",
        "rollup": "^4.21.3",
        "rollup-plugin-dts": "^6.1.1",
        "rollup-plugin-polyfill-node": "^0.13.0",
        "ts-node": "^10.9.2",
        "tslib": "^2.7.0",
        "typescript": "^5.6.2",
        "vitest": "^2.1.1"
    },
    "scripts": {
        "test": "pnpm test:unit:all && pnpm test:e2e:all",
        "test-all": "vitest run",
        "test:unit:all": "EXCLUDE_E2E=true vitest run",
        "test-validator": "./../../cli/test_bin/run test-validator",
        "test:e2e:transfer": "pnpm test-validator && vitest run tests/e2e/transfer.test.ts --reporter=verbose",
        "test:e2e:compress": "pnpm test-validator && vitest run tests/e2e/compress.test.ts --reporter=verbose",
        "test:e2e:test-rpc": "pnpm test-validator && vitest run tests/e2e/test-rpc.test.ts",
        "test:e2e:rpc-interop": "pnpm test-validator && vitest run tests/e2e/rpc-interop.test.ts",
        "test:e2e:browser": "pnpm playwright test",
        "test:e2e:all": "pnpm test-validator && vitest run tests/e2e/test-rpc.test.ts && vitest run tests/e2e/compress.test.ts && vitest run tests/e2e/transfer.test.ts && vitest run tests/e2e/rpc-interop.test.ts",
        "test:index": "vitest run tests/e2e/program.test.ts",
        "test:e2e:serde": "vitest run tests/e2e/serde.test.ts",
        "test:verbose": "vitest run --reporter=verbose",
        "test:testnet": "vitest run tests/e2e/testnet.test.ts --reporter=verbose",
        "pull-idls": "../../scripts/push-stateless-js-idls.sh && ../../scripts/push-compressed-token-idl.sh",
        "build": "rimraf dist && pnpm pull-idls && pnpm build:bundle",
        "build:bundle": "rollup -c",
        "format": "prettier --write .",
        "lint": "eslint ."
    },
    "nx": {
        "targets": {
            "build": {
                "inputs": [
                    "{workspaceRoot}/cli",
                    "{workspaceRoot}/target/idl",
                    "{workspaceRoot}/target/types"
                ]
            }
        }
    }
}
