/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetProofsByIndicesPostRequestParams {
    #[serde(rename = "indices")]
    pub indices: Vec<u64>,
    /// A 32-byte hash represented as a base58 string.
    #[serde(rename = "merkleTree")]
    pub merkle_tree: String,
}

impl GetProofsByIndicesPostRequestParams {
    pub fn new(indices: Vec<u64>, merkle_tree: String) -> GetProofsByIndicesPostRequestParams {
        GetProofsByIndicesPostRequestParams {
            indices,
            merkle_tree,
        }
    }
}

