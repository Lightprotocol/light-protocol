/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 *
 * Generated by: https://openapi-generator.tech
 */
use std::fmt::Display;

use crate::models;

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccountState {
    #[serde(rename = "initialized")]
    Initialized,
    #[serde(rename = "frozen")]
    Frozen,
}

impl Display for AccountState {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let str = match self {
            Self::Initialized => String::from("initialized"),
            Self::Frozen => String::from("frozen"),
        };
        write!(f, "{}", str)
    }
}

impl Default for AccountState {
    fn default() -> AccountState {
        Self::Initialized
    }
}
