/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProofOfLeaf {
    /// A 32-byte hash represented as a base58 string.
    #[serde(rename = "leaf")]
    pub leaf: String,
    #[serde(rename = "proof")]
    pub proof: Vec<String>,
}

impl ProofOfLeaf {
    pub fn new(leaf: String, proof: Vec<String>) -> ProofOfLeaf {
        ProofOfLeaf { leaf, proof }
    }
}
