/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SerializableTreeType {
    #[serde(rename = "State")]
    State,
    #[serde(rename = "Address")]
    Address,
    #[serde(rename = "BatchedState")]
    BatchedState,
    #[serde(rename = "BatchedAddress")]
    BatchedAddress,
    #[serde(rename = "Unknown")]
    Unknown,

}

impl ToString for SerializableTreeType {
    fn to_string(&self) -> String {
        match self {
            Self::State => String::from("State"),
            Self::Address => String::from("Address"),
            Self::BatchedState => String::from("BatchedState"),
            Self::BatchedAddress => String::from("BatchedAddress"),
            Self::Unknown => String::from("Unknown"),
        }
    }
}

impl Default for SerializableTreeType {
    fn default() -> SerializableTreeType {
        Self::State
    }
}

