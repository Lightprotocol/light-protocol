/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCompressionSignaturesForOwnerPostRequestParams {
    #[serde(rename = "cursor", default, skip_serializing_if = "Option::is_none")]
    pub cursor: Option<String>,
    #[serde(rename = "limit", default, skip_serializing_if = "Option::is_none")]
    pub limit: Option<u16>,
    /// A Solana public key represented as a base58 string.
    #[serde(rename = "owner")]
    pub owner: String,
}

impl GetCompressionSignaturesForOwnerPostRequestParams {
    pub fn new(owner: String) -> GetCompressionSignaturesForOwnerPostRequestParams {
        GetCompressionSignaturesForOwnerPostRequestParams {
            cursor: None,
            limit: None,
            owner,
        }
    }
}
