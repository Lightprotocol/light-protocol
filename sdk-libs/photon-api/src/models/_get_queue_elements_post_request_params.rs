/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetQueueElementsPostRequestParams {
    #[serde(rename = "merkleTree")]
    pub merkle_tree: [u8; 32],
    #[serde(rename = "numElements")]
    pub num_elements: u16,
    #[serde(rename = "queueType")]
    pub queue_type: u16,
    #[serde(rename = "startOffset", default, skip_serializing_if = "Option::is_none")]
    pub start_offset: Option<u64>,
}

impl GetQueueElementsPostRequestParams {
    pub fn new(merkle_tree: [u8; 32], num_elements: u16, queue_type: u16) -> GetQueueElementsPostRequestParams {
        GetQueueElementsPostRequestParams {
            merkle_tree,
            num_elements,
            queue_type,
            start_offset: None,
        }
    }
}

