/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetQueueElementsPostRequestParams {
    #[serde(rename = "numElements")]
    pub num_elements: u16,
    #[serde(rename = "queueType")]
    pub queue_type: u16,
    #[serde(
        rename = "startOffset",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub start_offset: Option<u64>,
    /// A 32-byte hash represented as a base58 string.
    #[serde(rename = "tree")]
    pub tree: String,
}

impl GetQueueElementsPostRequestParams {
    pub fn new(
        num_elements: u16,
        queue_type: u16,
        tree: String,
    ) -> GetQueueElementsPostRequestParams {
        GetQueueElementsPostRequestParams {
            num_elements,
            queue_type,
            start_offset: None,
            tree,
        }
    }
}
