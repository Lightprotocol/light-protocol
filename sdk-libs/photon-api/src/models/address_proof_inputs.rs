/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddressProofInputs {
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "merkleContext")]
    pub merkle_context: Box<models::MerkleContextV2>,
    #[serde(rename = "root")]
    pub root: String,
    #[serde(rename = "rootIndex")]
    pub root_index: u16,
}

impl AddressProofInputs {
    pub fn new(
        address: String,
        merkle_context: models::MerkleContextV2,
        root: String,
        root_index: u16,
    ) -> AddressProofInputs {
        AddressProofInputs {
            address,
            merkle_context: Box::new(merkle_context),
            root,
            root_index,
        }
    }
}
