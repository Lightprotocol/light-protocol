/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LeafInfo {
    /// A 32-byte hash represented as a base58 string.
    #[serde(rename = "leaf")]
    pub leaf: String,
    #[serde(rename = "leaf_index")]
    pub leaf_index: u32,
    /// A 32-byte hash represented as a base58 string.
    #[serde(rename = "tx_hash")]
    pub tx_hash: String,
}

impl LeafInfo {
    pub fn new(leaf: String, leaf_index: u32, tx_hash: String) -> LeafInfo {
        LeafInfo {
            leaf,
            leaf_index,
            tx_hash,
        }
    }
}
