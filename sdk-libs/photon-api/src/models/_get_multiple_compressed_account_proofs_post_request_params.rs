/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// GetMultipleCompressedAccountProofsPostRequestParams : Request for compressed account proof data
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMultipleCompressedAccountProofsPostRequestParams {
    #[serde(rename = "hashes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub hashes: Option<Option<Vec<String>>>,
}

impl GetMultipleCompressedAccountProofsPostRequestParams {
    /// Request for compressed account proof data
    pub fn new() -> GetMultipleCompressedAccountProofsPostRequestParams {
        GetMultipleCompressedAccountProofsPostRequestParams {
            hashes: None,
        }
    }
}

