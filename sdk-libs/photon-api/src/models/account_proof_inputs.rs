/*
 * photon-indexer
 *
 * Solana indexer for general compression
 *
 * The version of the OpenAPI document: 0.50.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountProofInputs {
    #[serde(rename = "hash")]
    pub hash: String,
    #[serde(rename = "leafIndex")]
    pub leaf_index: u64,
    #[serde(rename = "merkleContext")]
    pub merkle_context: Box<models::MerkleContextV2>,
    #[serde(rename = "root")]
    pub root: String,
    #[serde(rename = "rootIndex")]
    pub root_index: Box<models::RootIndex>,
}

impl AccountProofInputs {
    pub fn new(
        hash: String,
        leaf_index: u64,
        merkle_context: models::MerkleContextV2,
        root: String,
        root_index: models::RootIndex,
    ) -> AccountProofInputs {
        AccountProofInputs {
            hash,
            leaf_index,
            merkle_context: Box::new(merkle_context),
            root,
            root_index: Box::new(root_index),
        }
    }
}
