import ProvenZk.Gates
import ProvenZk.Ext.Vector

set_option linter.unusedVariables false

namespace LightProver

def Order : ℕ := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
variable [Fact (Nat.Prime Order)]
abbrev F := ZMod Order
abbrev Gates := GatesGnark8 Order

def sbox (Inp: F) (k: F -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.mul Inp Inp ∧
    ∃gate_1, gate_1 = Gates.mul gate_0 gate_0 ∧
    ∃gate_2, gate_2 = Gates.mul Inp gate_1 ∧
    k gate_2

def mds_3 (Inp: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.mul Inp[0] (7511745149465107256748700652201246547602992235352608707588321460060273774987:F) ∧
    ∃gate_1, gate_1 = Gates.add (0:F) gate_0 ∧
    ∃gate_2, gate_2 = Gates.mul Inp[1] (10370080108974718697676803824769673834027675643658433702224577712625900127200:F) ∧
    ∃gate_3, gate_3 = Gates.add gate_1 gate_2 ∧
    ∃gate_4, gate_4 = Gates.mul Inp[2] (19705173408229649878903981084052839426532978878058043055305024233888854471533:F) ∧
    ∃gate_5, gate_5 = Gates.add gate_3 gate_4 ∧
    ∃gate_6, gate_6 = Gates.mul Inp[0] (18732019378264290557468133440468564866454307626475683536618613112504878618481:F) ∧
    ∃gate_7, gate_7 = Gates.add (0:F) gate_6 ∧
    ∃gate_8, gate_8 = Gates.mul Inp[1] (20870176810702568768751421378473869562658540583882454726129544628203806653987:F) ∧
    ∃gate_9, gate_9 = Gates.add gate_7 gate_8 ∧
    ∃gate_10, gate_10 = Gates.mul Inp[2] (7266061498423634438633389053804536045105766754026813321943009179476902321146:F) ∧
    ∃gate_11, gate_11 = Gates.add gate_9 gate_10 ∧
    ∃gate_12, gate_12 = Gates.mul Inp[0] (9131299761947733513298312097611845208338517739621853568979632113419485819303:F) ∧
    ∃gate_13, gate_13 = Gates.add (0:F) gate_12 ∧
    ∃gate_14, gate_14 = Gates.mul Inp[1] (10595341252162738537912664445405114076324478519622938027420701542910180337937:F) ∧
    ∃gate_15, gate_15 = Gates.add gate_13 gate_14 ∧
    ∃gate_16, gate_16 = Gates.mul Inp[2] (11597556804922396090267472882856054602429588299176362916247939723151043581408:F) ∧
    ∃gate_17, gate_17 = Gates.add gate_15 gate_16 ∧
    k vec![gate_5, gate_11, gate_17]

def fullRound_3_3 (Inp: Vector F 3) (Consts: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.add Inp[0] Consts[0] ∧
    ∃gate_1, gate_1 = Gates.add Inp[1] Consts[1] ∧
    ∃gate_2, gate_2 = Gates.add Inp[2] Consts[2] ∧
    sbox gate_0 fun gate_3 =>
    sbox gate_1 fun gate_4 =>
    sbox gate_2 fun gate_5 =>
    mds_3 vec![gate_3, gate_4, gate_5] fun gate_6 =>
    k gate_6

def halfRound_3_3 (Inp: Vector F 3) (Consts: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.add Inp[0] Consts[0] ∧
    ∃gate_1, gate_1 = Gates.add Inp[1] Consts[1] ∧
    ∃gate_2, gate_2 = Gates.add Inp[2] Consts[2] ∧
    sbox gate_0 fun gate_3 =>
    mds_3 vec![gate_3, gate_1, gate_2] fun gate_4 =>
    k gate_4

def poseidon_3 (Inputs: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    fullRound_3_3 Inputs vec![(6745197990210204598374042828761989596302876299545964402857411729872131034734:F), (426281677759936592021316809065178817848084678679510574715894138690250139748:F), (4014188762916583598888942667424965430287497824629657219807941460227372577781:F)] fun gate_0 =>
    fullRound_3_3 gate_0 vec![(21328925083209914769191926116470334003273872494252651254811226518870906634704:F), (19525217621804205041825319248827370085205895195618474548469181956339322154226:F), (1402547928439424661186498190603111095981986484908825517071607587179649375482:F)] fun gate_1 =>
    fullRound_3_3 gate_1 vec![(18320863691943690091503704046057443633081959680694199244583676572077409194605:F), (17709820605501892134371743295301255810542620360751268064484461849423726103416:F), (15970119011175710804034336110979394557344217932580634635707518729185096681010:F)] fun gate_2 =>
    fullRound_3_3 gate_2 vec![(9818625905832534778628436765635714771300533913823445439412501514317783880744:F), (6235167673500273618358172865171408902079591030551453531218774338170981503478:F), (12575685815457815780909564540589853169226710664203625668068862277336357031324:F)] fun gate_3 =>
    halfRound_3_3 gate_3 vec![(7381963244739421891665696965695211188125933529845348367882277882370864309593:F), (14214782117460029685087903971105962785460806586237411939435376993762368956406:F), (13382692957873425730537487257409819532582973556007555550953772737680185788165:F)] fun gate_4 =>
    halfRound_3_3 gate_4 vec![(2203881792421502412097043743980777162333765109810562102330023625047867378813:F), (2916799379096386059941979057020673941967403377243798575982519638429287573544:F), (4341714036313630002881786446132415875360643644216758539961571543427269293497:F)] fun gate_5 =>
    halfRound_3_3 gate_5 vec![(2340590164268886572738332390117165591168622939528604352383836760095320678310:F), (5222233506067684445011741833180208249846813936652202885155168684515636170204:F), (7963328565263035669460582454204125526132426321764384712313576357234706922961:F)] fun gate_6 =>
    halfRound_3_3 gate_6 vec![(1394121618978136816716817287892553782094854454366447781505650417569234586889:F), (20251767894547536128245030306810919879363877532719496013176573522769484883301:F), (141695147295366035069589946372747683366709960920818122842195372849143476473:F)] fun gate_7 =>
    halfRound_3_3 gate_7 vec![(15919677773886738212551540894030218900525794162097204800782557234189587084981:F), (2616624285043480955310772600732442182691089413248613225596630696960447611520:F), (4740655602437503003625476760295930165628853341577914460831224100471301981787:F)] fun gate_8 =>
    halfRound_3_3 gate_8 vec![(19201590924623513311141753466125212569043677014481753075022686585593991810752:F), (12116486795864712158501385780203500958268173542001460756053597574143933465696:F), (8481222075475748672358154589993007112877289817336436741649507712124418867136:F)] fun gate_9 =>
    halfRound_3_3 gate_9 vec![(5181207870440376967537721398591028675236553829547043817076573656878024336014:F), (1576305643467537308202593927724028147293702201461402534316403041563704263752:F), (2555752030748925341265856133642532487884589978209403118872788051695546807407:F)] fun gate_10 =>
    halfRound_3_3 gate_10 vec![(18840924862590752659304250828416640310422888056457367520753407434927494649454:F), (14593453114436356872569019099482380600010961031449147888385564231161572479535:F), (20826991704411880672028799007667199259549645488279985687894219600551387252871:F)] fun gate_11 =>
    halfRound_3_3 gate_11 vec![(9159011389589751902277217485643457078922343616356921337993871236707687166408:F), (5605846325255071220412087261490782205304876403716989785167758520729893194481:F), (1148784255964739709393622058074925404369763692117037208398835319441214134867:F)] fun gate_12 =>
    halfRound_3_3 gate_12 vec![(20945896491956417459309978192328611958993484165135279604807006821513499894540:F), (229312996389666104692157009189660162223783309871515463857687414818018508814:F), (21184391300727296923488439338697060571987191396173649012875080956309403646776:F)] fun gate_13 =>
    halfRound_3_3 gate_13 vec![(21853424399738097885762888601689700621597911601971608617330124755808946442758:F), (12776298811140222029408960445729157525018582422120161448937390282915768616621:F), (7556638921712565671493830639474905252516049452878366640087648712509680826732:F)] fun gate_14 =>
    halfRound_3_3 gate_14 vec![(19042212131548710076857572964084011858520620377048961573689299061399932349935:F), (12871359356889933725034558434803294882039795794349132643274844130484166679697:F), (3313271555224009399457959221795880655466141771467177849716499564904543504032:F)] fun gate_15 =>
    halfRound_3_3 gate_15 vec![(15080780006046305940429266707255063673138269243146576829483541808378091931472:F), (21300668809180077730195066774916591829321297484129506780637389508430384679582:F), (20480395468049323836126447690964858840772494303543046543729776750771407319822:F)] fun gate_16 =>
    halfRound_3_3 gate_16 vec![(10034492246236387932307199011778078115444704411143703430822959320969550003883:F), (19584962776865783763416938001503258436032522042569001300175637333222729790225:F), (20155726818439649091211122042505326538030503429443841583127932647435472711802:F)] fun gate_17 =>
    halfRound_3_3 gate_17 vec![(13313554736139368941495919643765094930693458639277286513236143495391474916777:F), (14606609055603079181113315307204024259649959674048912770003912154260692161833:F), (5563317320536360357019805881367133322562055054443943486481491020841431450882:F)] fun gate_18 =>
    halfRound_3_3 gate_18 vec![(10535419877021741166931390532371024954143141727751832596925779759801808223060:F), (12025323200952647772051708095132262602424463606315130667435888188024371598063:F), (2906495834492762782415522961458044920178260121151056598901462871824771097354:F)] fun gate_19 =>
    halfRound_3_3 gate_19 vec![(19131970618309428864375891649512521128588657129006772405220584460225143887876:F), (8896386073442729425831367074375892129571226824899294414632856215758860965449:F), (7748212315898910829925509969895667732958278025359537472413515465768989125274:F)] fun gate_20 =>
    halfRound_3_3 gate_20 vec![(422974903473869924285294686399247660575841594104291551918957116218939002865:F), (6398251826151191010634405259351528880538837895394722626439957170031528482771:F), (18978082967849498068717608127246258727629855559346799025101476822814831852169:F)] fun gate_21 =>
    halfRound_3_3 gate_21 vec![(19150742296744826773994641927898928595714611370355487304294875666791554590142:F), (12896891575271590393203506752066427004153880610948642373943666975402674068209:F), (9546270356416926575977159110423162512143435321217584886616658624852959369669:F)] fun gate_22 =>
    halfRound_3_3 gate_22 vec![(2159256158967802519099187112783460402410585039950369442740637803310736339200:F), (8911064487437952102278704807713767893452045491852457406400757953039127292263:F), (745203718271072817124702263707270113474103371777640557877379939715613501668:F)] fun gate_23 =>
    halfRound_3_3 gate_23 vec![(19313999467876585876087962875809436559985619524211587308123441305315685710594:F), (13254105126478921521101199309550428567648131468564858698707378705299481802310:F), (1842081783060652110083740461228060164332599013503094142244413855982571335453:F)] fun gate_24 =>
    halfRound_3_3 gate_24 vec![(9630707582521938235113899367442877106957117302212260601089037887382200262598:F), (5066637850921463603001689152130702510691309665971848984551789224031532240292:F), (4222575506342961001052323857466868245596202202118237252286417317084494678062:F)] fun gate_25 =>
    halfRound_3_3 gate_25 vec![(2919565560395273474653456663643621058897649501626354982855207508310069954086:F), (6828792324689892364977311977277548750189770865063718432946006481461319858171:F), (2245543836264212411244499299744964607957732316191654500700776604707526766099:F)] fun gate_26 =>
    halfRound_3_3 gate_26 vec![(19602444885919216544870739287153239096493385668743835386720501338355679311704:F), (8239538512351936341605373169291864076963368674911219628966947078336484944367:F), (15053013456316196458870481299866861595818749671771356646798978105863499965417:F)] fun gate_27 =>
    halfRound_3_3 gate_27 vec![(7173615418515925804810790963571435428017065786053377450925733428353831789901:F), (8239211677777829016346247446855147819062679124993100113886842075069166957042:F), (15330855478780269194281285878526984092296288422420009233557393252489043181621:F)] fun gate_28 =>
    halfRound_3_3 gate_28 vec![(10014883178425964324400942419088813432808659204697623248101862794157084619079:F), (14014440630268834826103915635277409547403899966106389064645466381170788813506:F), (3580284508947993352601712737893796312152276667249521401778537893620670305946:F)] fun gate_29 =>
    halfRound_3_3 gate_29 vec![(2559754020964039399020874042785294258009596917335212876725104742182177996988:F), (14898657953331064524657146359621913343900897440154577299309964768812788279359:F), (2094037260225570753385567402013028115218264157081728958845544426054943497065:F)] fun gate_30 =>
    halfRound_3_3 gate_30 vec![(18051086536715129874440142649831636862614413764019212222493256578581754875930:F), (21680659279808524976004872421382255670910633119979692059689680820959727969489:F), (13950668739013333802529221454188102772764935019081479852094403697438884885176:F)] fun gate_31 =>
    halfRound_3_3 gate_31 vec![(9703845704528288130475698300068368924202959408694460208903346143576482802458:F), (12064310080154762977097567536495874701200266107682637369509532768346427148165:F), (16970760937630487134309762150133050221647250855182482010338640862111040175223:F)] fun gate_32 =>
    halfRound_3_3 gate_32 vec![(9790997389841527686594908620011261506072956332346095631818178387333642218087:F), (16314772317774781682315680698375079500119933343877658265473913556101283387175:F), (82044870826814863425230825851780076663078706675282523830353041968943811739:F)] fun gate_33 =>
    halfRound_3_3 gate_33 vec![(21696416499108261787701615667919260888528264686979598953977501999747075085778:F), (327771579314982889069767086599893095509690747425186236545716715062234528958:F), (4606746338794869835346679399457321301521448510419912225455957310754258695442:F)] fun gate_34 =>
    halfRound_3_3 gate_34 vec![(64499140292086295251085369317820027058256893294990556166497635237544139149:F), (10455028514626281809317431738697215395754892241565963900707779591201786416553:F), (10421411526406559029881814534127830959833724368842872558146891658647152404488:F)] fun gate_35 =>
    halfRound_3_3 gate_35 vec![(18848084335930758908929996602136129516563864917028006334090900573158639401697:F), (13844582069112758573505569452838731733665881813247931940917033313637916625267:F), (13488838454403536473492810836925746129625931018303120152441617863324950564617:F)] fun gate_36 =>
    halfRound_3_3 gate_36 vec![(15742141787658576773362201234656079648895020623294182888893044264221895077688:F), (6756884846734501741323584200608866954194124526254904154220230538416015199997:F), (7860026400080412708388991924996537435137213401947704476935669541906823414404:F)] fun gate_37 =>
    halfRound_3_3 gate_37 vec![(7871040688194276447149361970364037034145427598711982334898258974993423182255:F), (20758972836260983284101736686981180669442461217558708348216227791678564394086:F), (21723241881201839361054939276225528403036494340235482225557493179929400043949:F)] fun gate_38 =>
    halfRound_3_3 gate_38 vec![(19428469330241922173653014973246050805326196062205770999171646238586440011910:F), (7969200143746252148180468265998213908636952110398450526104077406933642389443:F), (10950417916542216146808986264475443189195561844878185034086477052349738113024:F)] fun gate_39 =>
    halfRound_3_3 gate_39 vec![(18149233917533571579549129116652755182249709970669448788972210488823719849654:F), (3729796741814967444466779622727009306670204996071028061336690366291718751463:F), (5172504399789702452458550583224415301790558941194337190035441508103183388987:F)] fun gate_40 =>
    halfRound_3_3 gate_40 vec![(6686473297578275808822003704722284278892335730899287687997898239052863590235:F), (19426913098142877404613120616123695099909113097119499573837343516470853338513:F), (5120337081764243150760446206763109494847464512045895114970710519826059751800:F)] fun gate_41 =>
    halfRound_3_3 gate_41 vec![(5055737465570446530938379301905385631528718027725177854815404507095601126720:F), (14235578612970484492268974539959119923625505766550088220840324058885914976980:F), (653592517890187950103239281291172267359747551606210609563961204572842639923:F)] fun gate_42 =>
    halfRound_3_3 gate_42 vec![(5507360526092411682502736946959369987101940689834541471605074817375175870579:F), (7864202866011437199771472205361912625244234597659755013419363091895334445453:F), (21294659996736305811805196472076519801392453844037698272479731199885739891648:F)] fun gate_43 =>
    halfRound_3_3 gate_43 vec![(13767183507040326119772335839274719411331242166231012705169069242737428254651:F), (810181532076738148308457416289197585577119693706380535394811298325092337781:F), (14232321930654703053193240133923161848171310212544136614525040874814292190478:F)] fun gate_44 =>
    halfRound_3_3 gate_44 vec![(16796904728299128263054838299534612533844352058851230375569421467352578781209:F), (16256310366973209550759123431979563367001604350120872788217761535379268327259:F), (19791658638819031543640174069980007021961272701723090073894685478509001321817:F)] fun gate_45 =>
    halfRound_3_3 gate_45 vec![(7046232469803978873754056165670086532908888046886780200907660308846356865119:F), (16001732848952745747636754668380555263330934909183814105655567108556497219752:F), (9737276123084413897604802930591512772593843242069849260396983774140735981896:F)] fun gate_46 =>
    halfRound_3_3 gate_46 vec![(11410895086919039954381533622971292904413121053792570364694836768885182251535:F), (19098362474249267294548762387533474746422711206129028436248281690105483603471:F), (11013788190750472643548844759298623898218957233582881400726340624764440203586:F)] fun gate_47 =>
    halfRound_3_3 gate_47 vec![(2206958256327295151076063922661677909471794458896944583339625762978736821035:F), (7171889270225471948987523104033632910444398328090760036609063776968837717795:F), (2510237900514902891152324520472140114359583819338640775472608119384714834368:F)] fun gate_48 =>
    halfRound_3_3 gate_48 vec![(8825275525296082671615660088137472022727508654813239986303576303490504107418:F), (1481125575303576470988538039195271612778457110700618040436600537924912146613:F), (16268684562967416784133317570130804847322980788316762518215429249893668424280:F)] fun gate_49 =>
    halfRound_3_3 gate_49 vec![(4681491452239189664806745521067158092729838954919425311759965958272644506354:F), (3131438137839074317765338377823608627360421824842227925080193892542578675835:F), (7930402370812046914611776451748034256998580373012248216998696754202474945793:F)] fun gate_50 =>
    halfRound_3_3 gate_50 vec![(8973151117361309058790078507956716669068786070949641445408234962176963060145:F), (10223139291409280771165469989652431067575076252562753663259473331031932716923:F), (2232089286698717316374057160056566551249777684520809735680538268209217819725:F)] fun gate_51 =>
    halfRound_3_3 gate_51 vec![(16930089744400890347392540468934821520000065594669279286854302439710657571308:F), (21739597952486540111798430281275997558482064077591840966152905690279247146674:F), (7508315029150148468008716674010060103310093296969466203204862163743615534994:F)] fun gate_52 =>
    halfRound_3_3 gate_52 vec![(11418894863682894988747041469969889669847284797234703818032750410328384432224:F), (10895338268862022698088163806301557188640023613155321294365781481663489837917:F), (18644184384117747990653304688839904082421784959872380449968500304556054962449:F)] fun gate_53 =>
    halfRound_3_3 gate_53 vec![(7414443845282852488299349772251184564170443662081877445177167932875038836497:F), (5391299369598751507276083947272874512197023231529277107201098701900193273851:F), (10329906873896253554985208009869159014028187242848161393978194008068001342262:F)] fun gate_54 =>
    halfRound_3_3 gate_54 vec![(4711719500416619550464783480084256452493890461073147512131129596065578741786:F), (11943219201565014805519989716407790139241726526989183705078747065985453201504:F), (4298705349772984837150885571712355513879480272326239023123910904259614053334:F)] fun gate_55 =>
    halfRound_3_3 gate_55 vec![(9999044003322463509208400801275356671266978396985433172455084837770460579627:F), (4908416131442887573991189028182614782884545304889259793974797565686968097291:F), (11963412684806827200577486696316210731159599844307091475104710684559519773777:F)] fun gate_56 =>
    halfRound_3_3 gate_56 vec![(20129916000261129180023520480843084814481184380399868943565043864970719708502:F), (12884788430473747619080473633364244616344003003135883061507342348586143092592:F), (20286808211545908191036106582330883564479538831989852602050135926112143921015:F)] fun gate_57 =>
    halfRound_3_3 gate_57 vec![(16282045180030846845043407450751207026423331632332114205316676731302016331498:F), (4332932669439410887701725251009073017227450696965904037736403407953448682093:F), (11105712698773407689561953778861118250080830258196150686012791790342360778288:F)] fun gate_58 =>
    halfRound_3_3 gate_58 vec![(21853934471586954540926699232107176721894655187276984175226220218852955976831:F), (9807888223112768841912392164376763820266226276821186661925633831143729724792:F), (13411808896854134882869416756427789378942943805153730705795307450368858622668:F)] fun gate_59 =>
    halfRound_3_3 gate_59 vec![(17906847067500673080192335286161014930416613104209700445088168479205894040011:F), (14554387648466176616800733804942239711702169161888492380425023505790070369632:F), (4264116751358967409634966292436919795665643055548061693088119780787376143967:F)] fun gate_60 =>
    fullRound_3_3 gate_60 vec![(2401104597023440271473786738539405349187326308074330930748109868990675625380:F), (12251645483867233248963286274239998200789646392205783056343767189806123148785:F), (15331181254680049984374210433775713530849624954688899814297733641575188164316:F)] fun gate_61 =>
    fullRound_3_3 gate_61 vec![(13108834590369183125338853868477110922788848506677889928217413952560148766472:F), (6843160824078397950058285123048455551935389277899379615286104657075620692224:F), (10151103286206275742153883485231683504642432930275602063393479013696349676320:F)] fun gate_62 =>
    fullRound_3_3 gate_62 vec![(7074320081443088514060123546121507442501369977071685257650287261047855962224:F), (11413928794424774638606755585641504971720734248726394295158115188173278890938:F), (7312756097842145322667451519888915975561412209738441762091369106604423801080:F)] fun gate_63 =>
    fullRound_3_3 gate_63 vec![(7181677521425162567568557182629489303281861794357882492140051324529826589361:F), (15123155547166304758320442783720138372005699143801247333941013553002921430306:F), (13409242754315411433193860530743374419854094495153957441316635981078068351329:F)] fun gate_64 =>
    k gate_64

def Poseidon2 (In1: F) (In2: F) (k: F -> Prop): Prop :=
    poseidon_3 vec![(0:F), In1, In2] fun gate_0 =>
    k gate_0[0]

def ProveParentHash (Bit: F) (Hash: F) (Sibling: F) (k: F -> Prop): Prop :=
    Gates.is_bool Bit ∧
    ∃gate_1, Gates.select Bit Sibling Hash gate_1 ∧
    ∃gate_2, Gates.select Bit Hash Sibling gate_2 ∧
    Poseidon2 gate_1 gate_2 fun gate_3 =>
    k gate_3

def MerkleRootGadget_26_26 (Hash: F) (Index: F) (Path: Vector F 26) (k: F -> Prop): Prop :=
    ∃gate_0, Gates.to_binary Index 26 gate_0 ∧
    ProveParentHash gate_0[0] Hash Path[0] fun gate_1 =>
    ProveParentHash gate_0[1] gate_1 Path[1] fun gate_2 =>
    ProveParentHash gate_0[2] gate_2 Path[2] fun gate_3 =>
    ProveParentHash gate_0[3] gate_3 Path[3] fun gate_4 =>
    ProveParentHash gate_0[4] gate_4 Path[4] fun gate_5 =>
    ProveParentHash gate_0[5] gate_5 Path[5] fun gate_6 =>
    ProveParentHash gate_0[6] gate_6 Path[6] fun gate_7 =>
    ProveParentHash gate_0[7] gate_7 Path[7] fun gate_8 =>
    ProveParentHash gate_0[8] gate_8 Path[8] fun gate_9 =>
    ProveParentHash gate_0[9] gate_9 Path[9] fun gate_10 =>
    ProveParentHash gate_0[10] gate_10 Path[10] fun gate_11 =>
    ProveParentHash gate_0[11] gate_11 Path[11] fun gate_12 =>
    ProveParentHash gate_0[12] gate_12 Path[12] fun gate_13 =>
    ProveParentHash gate_0[13] gate_13 Path[13] fun gate_14 =>
    ProveParentHash gate_0[14] gate_14 Path[14] fun gate_15 =>
    ProveParentHash gate_0[15] gate_15 Path[15] fun gate_16 =>
    ProveParentHash gate_0[16] gate_16 Path[16] fun gate_17 =>
    ProveParentHash gate_0[17] gate_17 Path[17] fun gate_18 =>
    ProveParentHash gate_0[18] gate_18 Path[18] fun gate_19 =>
    ProveParentHash gate_0[19] gate_19 Path[19] fun gate_20 =>
    ProveParentHash gate_0[20] gate_20 Path[20] fun gate_21 =>
    ProveParentHash gate_0[21] gate_21 Path[21] fun gate_22 =>
    ProveParentHash gate_0[22] gate_22 Path[22] fun gate_23 =>
    ProveParentHash gate_0[23] gate_23 Path[23] fun gate_24 =>
    ProveParentHash gate_0[24] gate_24 Path[24] fun gate_25 =>
    ProveParentHash gate_0[25] gate_25 Path[25] fun gate_26 =>
    k gate_26

def InclusionProof_8_8_8_26_8_8_26 (Roots: Vector F 8) (Leaves: Vector F 8) (InPathIndices: Vector F 8) (InPathElements: Vector (Vector F 26) 8) (k: Vector F 8 -> Prop): Prop :=
    MerkleRootGadget_26_26 Leaves[0] InPathIndices[0] InPathElements[0] fun gate_0 =>
    Gates.eq gate_0 Roots[0] ∧
    MerkleRootGadget_26_26 Leaves[1] InPathIndices[1] InPathElements[1] fun gate_2 =>
    Gates.eq gate_2 Roots[1] ∧
    MerkleRootGadget_26_26 Leaves[2] InPathIndices[2] InPathElements[2] fun gate_4 =>
    Gates.eq gate_4 Roots[2] ∧
    MerkleRootGadget_26_26 Leaves[3] InPathIndices[3] InPathElements[3] fun gate_6 =>
    Gates.eq gate_6 Roots[3] ∧
    MerkleRootGadget_26_26 Leaves[4] InPathIndices[4] InPathElements[4] fun gate_8 =>
    Gates.eq gate_8 Roots[4] ∧
    MerkleRootGadget_26_26 Leaves[5] InPathIndices[5] InPathElements[5] fun gate_10 =>
    Gates.eq gate_10 Roots[5] ∧
    MerkleRootGadget_26_26 Leaves[6] InPathIndices[6] InPathElements[6] fun gate_12 =>
    Gates.eq gate_12 Roots[6] ∧
    MerkleRootGadget_26_26 Leaves[7] InPathIndices[7] InPathElements[7] fun gate_14 =>
    Gates.eq gate_14 Roots[7] ∧
    k vec![gate_0, gate_2, gate_4, gate_6, gate_8, gate_10, gate_12, gate_14]

def AssertIsLess_248 (A: F) (B: F) : Prop :=
    ∃gate_0, gate_0 = Gates.sub (452312848583266388373324160190187140051835877600158453279131187530910662656:F) B ∧
    ∃gate_1, gate_1 = Gates.add A gate_0 ∧
    ∃_ignored_, Gates.to_binary gate_1 248 _ignored_ ∧
    True

def mds_4 (Inp: Vector F 4) (k: Vector F 4 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.mul Inp[0] (16023668707004248971294664614290028914393192768609916554276071736843535714477:F) ∧
    ∃gate_1, gate_1 = Gates.add (0:F) gate_0 ∧
    ∃gate_2, gate_2 = Gates.mul Inp[1] (17849615858846139011678879517964683507928512741474025695659909954675835121177:F) ∧
    ∃gate_3, gate_3 = Gates.add gate_1 gate_2 ∧
    ∃gate_4, gate_4 = Gates.mul Inp[2] (1013663139540921998616312712475594638459213772728467613870351821911056489570:F) ∧
    ∃gate_5, gate_5 = Gates.add gate_3 gate_4 ∧
    ∃gate_6, gate_6 = Gates.mul Inp[3] (13211800058103802189838759488224684841774731021206389709687693993627918500545:F) ∧
    ∃gate_7, gate_7 = Gates.add gate_5 gate_6 ∧
    ∃gate_8, gate_8 = Gates.mul Inp[0] (19204974983793400699898444372535256207646557857575315905278218870961389967884:F) ∧
    ∃gate_9, gate_9 = Gates.add (0:F) gate_8 ∧
    ∃gate_10, gate_10 = Gates.mul Inp[1] (3722304780857845144568029505892077496425786544014166938942516810831732569870:F) ∧
    ∃gate_11, gate_11 = Gates.add gate_9 gate_10 ∧
    ∃gate_12, gate_12 = Gates.mul Inp[2] (11920634922168932145084219049241528148129057802067880076377897257847125830511:F) ∧
    ∃gate_13, gate_13 = Gates.add gate_11 gate_12 ∧
    ∃gate_14, gate_14 = Gates.mul Inp[3] (6085682566123812000257211683010755099394491689511511633947011263229442977967:F) ∧
    ∃gate_15, gate_15 = Gates.add gate_13 gate_14 ∧
    ∃gate_16, gate_16 = Gates.mul Inp[0] (14672613178263529785795301930884172260797190868602674472542654261498546023746:F) ∧
    ∃gate_17, gate_17 = Gates.add (0:F) gate_16 ∧
    ∃gate_18, gate_18 = Gates.mul Inp[1] (20850178060552184587113773087797340350525370429749200838012809627359404457643:F) ∧
    ∃gate_19, gate_19 = Gates.add gate_17 gate_18 ∧
    ∃gate_20, gate_20 = Gates.mul Inp[2] (7082289538076771741936674361200789891432311337766695368327626572220036527624:F) ∧
    ∃gate_21, gate_21 = Gates.add gate_19 gate_20 ∧
    ∃gate_22, gate_22 = Gates.mul Inp[3] (1787876543469562003404632310460227730887431311758627706450615128255538398187:F) ∧
    ∃gate_23, gate_23 = Gates.add gate_21 gate_22 ∧
    ∃gate_24, gate_24 = Gates.mul Inp[0] (21407770160218607278833379114951608489910182969042472165261557405353704846967:F) ∧
    ∃gate_25, gate_25 = Gates.add (0:F) gate_24 ∧
    ∃gate_26, gate_26 = Gates.mul Inp[1] (16058955581309173858487265533260133430557379878452348481750737813742488209262:F) ∧
    ∃gate_27, gate_27 = Gates.add gate_25 gate_26 ∧
    ∃gate_28, gate_28 = Gates.mul Inp[2] (593311177550138061601452020934455734040559402531605836278498327468203888086:F) ∧
    ∃gate_29, gate_29 = Gates.add gate_27 gate_28 ∧
    ∃gate_30, gate_30 = Gates.mul Inp[3] (341662423637860635938968460722645910313598807845686354625820505885069260074:F) ∧
    ∃gate_31, gate_31 = Gates.add gate_29 gate_30 ∧
    k vec![gate_7, gate_15, gate_23, gate_31]

def fullRound_4_4 (Inp: Vector F 4) (Consts: Vector F 4) (k: Vector F 4 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.add Inp[0] Consts[0] ∧
    ∃gate_1, gate_1 = Gates.add Inp[1] Consts[1] ∧
    ∃gate_2, gate_2 = Gates.add Inp[2] Consts[2] ∧
    ∃gate_3, gate_3 = Gates.add Inp[3] Consts[3] ∧
    sbox gate_0 fun gate_4 =>
    sbox gate_1 fun gate_5 =>
    sbox gate_2 fun gate_6 =>
    sbox gate_3 fun gate_7 =>
    mds_4 vec![gate_4, gate_5, gate_6, gate_7] fun gate_8 =>
    k gate_8

def halfRound_4_4 (Inp: Vector F 4) (Consts: Vector F 4) (k: Vector F 4 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.add Inp[0] Consts[0] ∧
    ∃gate_1, gate_1 = Gates.add Inp[1] Consts[1] ∧
    ∃gate_2, gate_2 = Gates.add Inp[2] Consts[2] ∧
    ∃gate_3, gate_3 = Gates.add Inp[3] Consts[3] ∧
    sbox gate_0 fun gate_4 =>
    mds_4 vec![gate_4, gate_1, gate_2, gate_3] fun gate_5 =>
    k gate_5

def poseidon_4 (Inputs: Vector F 4) (k: Vector F 4 -> Prop): Prop :=
    fullRound_4_4 Inputs vec![(11633431549750490989983886834189948010834808234699737327785600195936805266405:F), (17353750182810071758476407404624088842693631054828301270920107619055744005334:F), (11575173631114898451293296430061690731976535592475236587664058405912382527658:F), (9724643380371653925020965751082872123058642683375812487991079305063678725624:F)] fun gate_0 =>
    fullRound_4_4 gate_0 vec![(20936725237749945635418633443468987188819556232926135747685274666391889856770:F), (6427758822462294912934022562310355233516927282963039741999349770315205779230:F), (16782979953202249973699352594809882974187694538612412531558950864304931387798:F), (8979171037234948998646722737761679613767384188475887657669871981433930833742:F)] fun gate_1 =>
    fullRound_4_4 gate_1 vec![(5428827536651017352121626533783677797977876323745420084354839999137145767736:F), (507241738797493565802569310165979445570507129759637903167193063764556368390:F), (6711578168107599474498163409443059675558516582274824463959700553865920673097:F), (2197359304646916921018958991647650011119043556688567376178243393652789311643:F)] fun gate_2 =>
    fullRound_4_4 gate_2 vec![(4634703622846121403803831560584049007806112989824652272428991253572845447400:F), (17008376818199175111793852447685303011746023680921106348278379453039148937791:F), (18430784755956196942937899353653692286521408688385681805132578732731487278753:F), (4573768376486344895797915946239137669624900197544620153250805961657870918727:F)] fun gate_3 =>
    halfRound_4_4 gate_3 vec![(5624865188680173294191042415227598609140934495743721047183803859030618890703:F), (8228252753786907198149068514193371173033070694924002912950645971088002709521:F), (17586714789554691446538331362711502394998837215506284064347036653995353304693:F), (12985198716830497423350597750558817467658937953000235442251074063454897365701:F)] fun gate_4 =>
    halfRound_4_4 gate_4 vec![(13480076116139680784838493959937969792577589073830107110893279354229821035984:F), (480609231761423388761863647137314056373740727639536352979673303078459561332:F), (19503345496799249258956440299354839375920540225688429628121751361906635419276:F), (16837818502122887883669221005435922946567532037624537243846974433811447595173:F)] fun gate_5 =>
    halfRound_4_4 gate_5 vec![(5492108497278641078569490709794391352213168666744080628008171695469579703581:F), (11365311159988448419785032079155356000691294261495515880484003277443744617083:F), (13876891705632851072613751905778242936713392247975808888614530203269491723653:F), (10660388389107698747692475159023710744797290186015856503629656779989214850043:F)] fun gate_6 =>
    halfRound_4_4 gate_6 vec![(18876318870401623474401728758498150977988613254023317877612912724282285739292:F), (15543349138237018307536452195922365893694804703361435879256942490123776892424:F), (2839988449157209999638903652853828318645773519300826410959678570041742458201:F), (7566039810305694135184226097163626060317478635973510706368412858136696413063:F)] fun gate_7 =>
    halfRound_4_4 gate_7 vec![(6344830340705033582410486810600848473125256338903726340728639711688240744220:F), (12475357769019880256619207099578191648078162511547701737481203260317463892731:F), (13337401254840718303633782478677852514218549070508887338718446132574012311307:F), (21161869193849404954234950798647336336709035097706159414187214758702055364571:F)] fun gate_8 =>
    halfRound_4_4 gate_8 vec![(20671052961616073313397254362345395594858011165315285344464242404604146448678:F), (2772189387845778213446441819361180378678387127454165972767013098872140927416:F), (3339032002224218054945450150550795352855387702520990006196627537441898997147:F), (14919705931281848425960108279746818433850049439186607267862213649460469542157:F)] fun gate_9 =>
    halfRound_4_4 gate_9 vec![(17056699976793486403099510941807022658662936611123286147276760381688934087770:F), (16144580075268719403964467603213740327573316872987042261854346306108421013323:F), (15582343953927413680541644067712456296539774919658221087452235772880573393376:F), (17528510080741946423534916423363640132610906812668323263058626230135522155749:F)] fun gate_10 =>
    halfRound_4_4 gate_10 vec![(3190600034239022251529646836642735752388641846393941612827022280601486805721:F), (8463814172152682468446984305780323150741498069701538916468821815030498611418:F), (16533435971270903741871235576178437313873873358463959658178441562520661055273:F), (11845696835505436397913764735273748291716405946246049903478361223369666046634:F)] fun gate_11 =>
    halfRound_4_4 gate_11 vec![(18391057370973634202531308463652130631065370546571735004701144829951670507215:F), (262537877325812689820791215463881982531707709719292538608229687240243203710:F), (2187234489894387585309965540987639130975753519805550941279098789852422770021:F), (19189656350920455659006418422409390013967064310525314160026356916172976152967:F)] fun gate_12 =>
    halfRound_4_4 gate_12 vec![(15839474183930359560478122372067744245080413846070743460407578046890458719219:F), (1805019124769763805045852541831585930225376844141668951787801647576910524592:F), (323592203814803486950280155834638828455175703393817797003361354810251742052:F), (9780393509796825017346015868945480913627956475147371732521398519483580624282:F)] fun gate_13 =>
    halfRound_4_4 gate_13 vec![(14009429785059642386335012561867511048847749030947687313594053997432177705759:F), (13749550162460745037234826077137388777330401847577727796245150843898019635981:F), (19497187499283431845443758879472819384797584633472792651343926414232528405311:F), (3708428802547661961864524194762556064568867603968214870300574294082023305587:F)] fun gate_14 =>
    halfRound_4_4 gate_14 vec![(1339414413482882567499652761996854155383863472782829777976929310155400981782:F), (6396261245879814100794661157306877072718690153118140891315137894471052482309:F), (2069661495404347929962833138824526893650803079024564477269192079629046031674:F), (15793521554502133342917616035884588152451122589545915605459159078589855944361:F)] fun gate_15 =>
    halfRound_4_4 gate_15 vec![(17053424498357819626596285492499512504457128907932827007302385782133229252374:F), (13658536470391360399708067455536748955260723760813498481671323619545320978896:F), (21546095668130239633971575351786704948662094117932406102037724221634677838565:F), (21411726238386979516934941789127061362496195649331822900487557574597304399109:F)] fun gate_16 =>
    halfRound_4_4 gate_16 vec![(1944776378988765673004063363506638781964264107780425928778257145151172817981:F), (15590719714223718537172639598316570285163081746016049278954513732528516468773:F), (1351266421179051765004709939353170430290500926943038391678843253157009556309:F), (6772476224477167317130064764757502335545080109882028900432703947986275397548:F)] fun gate_17 =>
    halfRound_4_4 gate_17 vec![(10670120969725161535937685539136065944959698664551200616467222887025111751992:F), (4731853626374224678749618809759140702342195350742653173378450474772131006181:F), (14473527495914528513885847341981310373531349450901830749157165104135412062812:F), (16937191362061486658876740597821783333355021670608822932942683228741190786143:F)] fun gate_18 =>
    halfRound_4_4 gate_18 vec![(5656559696428674390125424316117443507583679061659043998559560535270557939546:F), (8897648276515725841133578021896617755369443750194849587616503841335248902806:F), (14938684446722672719637788054570691068799510611164812175626676768545923371470:F), (15284149043690546115252102390417391226617211133644099356880071475803043461465:F)] fun gate_19 =>
    halfRound_4_4 gate_19 vec![(2623479025068612775740107497276979457946709347831661908218182874823658838107:F), (6809791961761836061129379546794905411734858375517368211894790874813684813988:F), (2417620338751920563196799065781703780495622795713803712576790485412779971775:F), (4445143310792944321746901285176579692343442786777464604312772017806735512661:F)] fun gate_20 =>
    halfRound_4_4 gate_20 vec![(1429019233589939118995503267516676481141938536269008901607126781291273208629:F), (19874283200702583165110559932895904979843482162236139561356679724680604144459:F), (13426632171723830006915194799390005513190035492503509233177687891041405113055:F), (10582332261829184460912611488470654685922576576939233092337240630493625631748:F)] fun gate_21 =>
    halfRound_4_4 gate_21 vec![(21233753931561918964692715735079738969202507286592442257083521969358109931739:F), (15570526832729960536088203016939646235070527502823725736220985057263010426410:F), (9379993197409194016084018867205217180276068758980710078281820842068357746159:F), (20771047769547788232530761122022227554484215799917531852224053856574439035591:F)] fun gate_22 =>
    halfRound_4_4 gate_22 vec![(20468066117407230615347036860121267564735050776924839007390915936603720868039:F), (5488458379783632930817704196671117722181776789793038046303454621235628350505:F), (1394272944960494549436156060041871735938329188644910029274839018389507786995:F), (5147716541319265558364686380685869814344975511061045836883803841066664401308:F)] fun gate_23 =>
    halfRound_4_4 gate_23 vec![(14583556014436264794011679557180458872925270147116325433110111823036572987256:F), (11881598145635709076820802010238799308467020773223027240974808290357539410246:F), (1566675577370566803714158020143436746360531503329117352692311127363508063658:F), (212097210828847555076368799807292486212366234848453077606919035866276438405:F)] fun gate_24 =>
    halfRound_4_4 gate_24 vec![(7447795983723838393344606913699113402588250391491430720006009618589586043349:F), (7626475329478847982857743246276194948757851985510858890691733676098590062312:F), (148936322117705719734052984176402258788283488576388928671173547788498414614:F), (15456385653678559339152734484033356164266089951521103188900320352052358038156:F)] fun gate_25 =>
    halfRound_4_4 gate_25 vec![(18207029603568083031075933940507782729612798852390383193518574746240484434885:F), (2783356767974552799246444090988849933848968900471538294757665724820698962027:F), (2721136724873145834448711197875719736776242904173494370334510875996324906822:F), (2101139679159828164567502977338446902934095964116292264803779234163802308621:F)] fun gate_26 =>
    halfRound_4_4 gate_26 vec![(8995221857405946029753863203034191016106353727035116779995228902499254557482:F), (502050382895618998241481591846956281507455925731652006822624065608151015665:F), (4998642074447347292230083981705092465562944918178587362047610976950173759150:F), (9349925422548495396957991080641322437286312278286826683803695584372829655908:F)] fun gate_27 =>
    halfRound_4_4 gate_27 vec![(11780347248050333407713097022607360765169543706092266937432199545936788840710:F), (17875657248128792902343900636176628524337469245418171053476833541334867949063:F), (10366707960411170224546487410133378396211437543372531210718212258701730218585:F), (16918708725327525329474486073529093971911689155838787615544405646587858805834:F)] fun gate_28 =>
    halfRound_4_4 gate_28 vec![(18845394288827839099791436411179859406694814287249240544635770075956540806104:F), (9838806160073701591447223014625214979004281138811495046618998465898136914308:F), (10285680425916086863571101560978592912547567902925573205991454216988033815759:F), (1292119286233210185026381033809498665433650491423040630240164455269575958565:F)] fun gate_29 =>
    halfRound_4_4 gate_29 vec![(2665524343601461489082054230426835550060387413710679950970616347092017688857:F), (13502286133892103192305476866434484921895765252706158317341618311553476426306:F), (686854655578191041672292972738875170071982317195092845673566320025160026512:F), (9315942923163981372372434957632152754092082859001311184186702151150554806508:F)] fun gate_30 =>
    halfRound_4_4 gate_30 vec![(17166793131238158480636170455452575971861309825745828685724097210995239015581:F), (4443784618760852757287735236046535266034706880634443644576653970979377878608:F), (21470445782021672615018345703580059646973568891521510437236903770708690160080:F), (6932852445473908850835611723958058203645654625170962537129706393570586565567:F)] fun gate_31 =>
    halfRound_4_4 gate_31 vec![(17078326120157725640173982185667969009350208542843294226397809921509565607842:F), (19251873001736801921864956728611772738233338338726553113352118847732921831266:F), (13062907978694932362695258750558734366820802962383346229947907261606619788585:F), (16576609187793673559170206379939616900133457644695219057683704871664434872406:F)] fun gate_32 =>
    halfRound_4_4 gate_32 vec![(17140499059660867342372156843620845644831519603574612796639429147195776838516:F), (16226688173010504218547945848523900236290532501559570164276462499487632388445:F), (2806068123803905806401128967330263340459046260107112845068533446899070326517:F), (17788735370835052317224182711467216134690146479710634688273650370951230404901:F)] fun gate_33 =>
    halfRound_4_4 gate_33 vec![(9840665370904113434661468973557421114403401847108482949465899631150766783733:F), (17357287363046228581837055771327121704742940914150998420465281177406182088510:F), (8956082469997974864521346025916496675956939495318858500685756691488425559998:F), (10583741436561099911914917245130852199607666337956354910388730829023746895549:F)] fun gate_34 =>
    halfRound_4_4 gate_34 vec![(15241902639811607164983030447109332729761435946009172128089506810551693978973:F), (10889882303914055687481932975789161945462141459528413507160087442461090813788:F), (19789561133254944544821898921133697408237804586549835559829396563401674817160:F), (20741336668287037026472434608739333171202674306575625457456116338034432647230:F)] fun gate_35 =>
    halfRound_4_4 gate_35 vec![(17864073449995977742930566850933082711031717858550870842712972350665650521079:F), (6017691253505466300212182439349954426085752315661098358839308909771637792741:F), (5209125836207196173669497054522582922896061838702136844305036341250990710540:F), (8138726312837322624537330169363664364899441867118983214176695868443641051381:F)] fun gate_36 =>
    halfRound_4_4 gate_36 vec![(15491983986041746833254372934846748393213690608865689646440909282144232382678:F), (5054332867608171303802774230688792431028169804536607979111644888500809938980:F), (15427030776591294577308915282298854681562344215287630895931797573417982096417:F), (21754057982677295571284116502193272661309010996970316384923307174180521790164:F)] fun gate_37 =>
    halfRound_4_4 gate_37 vec![(16265286590463120486705206231835953324076688991892805307349612983237844034032:F), (17679791107777049796013011282788633179411040182820636236163074053597517790779:F), (4281652562868629887097957174897458165728741859103571825874408386197225591996:F), (9168010397863299719604788533602757515513214141450093775967322808686129400625:F)] fun gate_38 =>
    halfRound_4_4 gate_38 vec![(17584182367226175071087689123358883902969885218985589531538416263709138156515:F), (15671512310414658663135385639435845966109237059155734764323312289873534719186:F), (10536294659491685326297777845632759824567028904726211134518740400643540109527:F), (13431319759608247201135260841651365578663315527795431484765940626659812285319:F)] fun gate_39 =>
    halfRound_4_4 gate_39 vec![(9584697124715190200241839387725546204368618031045071660911490086723434692561:F), (5180327104839158483066851400960171505063442195966219343315555549982472660055:F), (18888217223053385111625483360538133292128748730565502371803782424772027937822:F), (19535732913737027522540340630296365525208404217634392013266346283017745945894:F)] fun gate_40 =>
    halfRound_4_4 gate_40 vec![(8577759627886344995887423695190093296190181539234301534326157005220006624466:F), (16793670928407147476673650839110019799844249677846432113010280456483595763987:F), (13926032620965299897272071104154310460519723329016284975305942957859374938463:F), (4794697578055472890255676575927616606591024075768967985031137397587590174501:F)] fun gate_41 =>
    halfRound_4_4 gate_41 vec![(3529566190782060578446859853852791941913086545101307988176595267965876143250:F), (3975008029239568933166738482470827494289192118694622729549964538823092192163:F), (17739094873244464728483944474780943281491793683051033330476367597242349886622:F), (7367136451127531266518046223598095299278392589059366687082785080179161005418:F)] fun gate_42 =>
    halfRound_4_4 gate_42 vec![(11175297939460631138047404082172242706491354303440776362693987984031241399771:F), (21687543815463985355165197827968086406938428974327951792877419032069230058777:F), (21156136641989461785420005321350884477682466566148802533375726181416623358719:F), (17347558768803521970212188258074365309929638984714303299899732035040892048478:F)] fun gate_43 =>
    halfRound_4_4 gate_43 vec![(16293716234695956076322008955071091921491953458541407305955104663269677475740:F), (4206144021605871396668976569508168522675546062304959729829228403361714668567:F), (19988050626299122864942213847548542155670073758974734015174045163059179151544:F), (747972634423324369570795147739377097591383105262743308036321386836856106229:F)] fun gate_44 =>
    halfRound_4_4 gate_44 vec![(4612470951309047869982067912468200581649949743307592869671537990797895413707:F), (9630852913694079049153027193127278569487291430069466630362958024525616303220:F), (17941539917430916523930519432495442476511211427972760202450248798031711471474:F), (20332911350443969653703295317915788278109458962706923653715140186132935894113:F)] fun gate_45 =>
    halfRound_4_4 gate_45 vec![(21764801803055897327474057344100833670291402543384934706514147201527191846513:F), (18792043166429470991157980448329308661526906138700725174612608941551872082876:F), (12308177224490762720061048892842527800271687977085172836705858261595655154325:F), (6234555076867437297776538521925679658360922070165740193866337972293380196151:F)] fun gate_46 =>
    halfRound_4_4 gate_46 vec![(4651047048822067434403056477377459986292934655827821636179452835839127581305:F), (4762047093602693619418269784972874862577325737690375448572644958129932507374:F), (12373514879531674477721132062882065826558811149582829246378921774344318418269:F), (452512704634345955634014968317367844987135264395068376894497483188243356523:F)] fun gate_47 =>
    halfRound_4_4 gate_47 vec![(21642936370936057063268550589361090955573362743817395689260298777690935495218:F), (16170209200627740434842090607802586195654207376087117044989637541681675086276:F), (11682826760471401430136435257946377996085824742031456481961511737883954750045:F), (20628055165039718158878805520495324869838279647796500565701893698896698211929:F)] fun gate_48 =>
    halfRound_4_4 gate_48 vec![(16438375313036818694140277721632185529697783132872683043559674569424388375143:F), (4855690425141732729622202649174026736476144238882856677953515240716341676853:F), (11680269552161854836013784579325442981497075865007420427279871128110023581360:F), (7052688838948398479718163301866620773458411881591190572311273079833122884040:F)] fun gate_49 =>
    halfRound_4_4 gate_49 vec![(10339199500986679207942447430230758709198802637648680544816596214595887890122:F), (16310974164366557619327768780809157500356605306298690718711623172209302167675:F), (4572051236178600578566286373491186377601851723137133424312445102215267283375:F), (20933392620931420860078756859763708025350478446661033451436796955762857910093:F)] fun gate_50 =>
    halfRound_4_4 gate_50 vec![(10145870387395991071594748880090507240612313913083518483680901820696866812598:F), (11173854866888110108878560284050142518686158431744851782991510385755602063727:F), (3895357290105797542988795070918100785105415165483657264407967118738833241858:F), (16358886674154007883356717944805100413481233709808000948036974385803613296849:F)] fun gate_51 =>
    halfRound_4_4 gate_51 vec![(10544067501284177518983466437755150442726536257903869254459488412549270232123:F), (10495171258604974589451578238018388630585794890815982293891430761424812600427:F), (13820724103604550843562070971473423552484851063169471886037640613650155173554:F), (2334954333435579600152488915208745055087482119087065911968347050969338669409:F)] fun gate_52 =>
    halfRound_4_4 gate_52 vec![(15100284614446277058846085121308897497066957549089629374506920751044105723791:F), (8493821960754696376711287628276980042183127459347650448500304251148421115590:F), (18612435536889941393944858783110719304584209891406420832295898519317994950798:F), (362101794940079733974215941991047456600874474038781578925062694203564740952:F)] fun gate_53 =>
    halfRound_4_4 gate_53 vec![(11020033081956343850903875701444955317664141075326494650405276926536449284939:F), (9396289482656518627529185765935649373549564165735162258912975312413185691167:F), (6879055176150676925438486069371149089824290576271090206945130252868108043422:F), (12466610601804566637227883322591924115458766539177061670432424956205788935144:F)] fun gate_54 =>
    halfRound_4_4 gate_54 vec![(6570302110526154075173287644133038486970998888099669190857256824048085590052:F), (20997862990590350605775941983360263378441519274215787225587679916056749626824:F), (2642485040919927233352421501444361753154137311893617974318977215281720542724:F), (18832940311494549247524002614969382413324906834787422940144532352384742506504:F)] fun gate_55 =>
    halfRound_4_4 gate_55 vec![(18751288968473015103659806087408412890105261892140397690496125593160830694164:F), (13938622158186434739533995447553824444480420613323252752005511269934155122652:F), (12878982657080117316101160964182202074759312554860119090514406868768962707099:F), (13757859113119127982418426758782225628393556023865807897214601826218702003247:F)] fun gate_56 =>
    halfRound_4_4 gate_56 vec![(11817871682869491875135867072669251115204978941736982465520516648114811792373:F), (11336448548896065624515261709306933490181794458266726453198857687608284871020:F), (194970717714150352477887371297168267861902418496792228400198694925721020795:F), (4999282817977533227652305360183045040853565298259070645110453061034932285549:F)] fun gate_57 =>
    halfRound_4_4 gate_57 vec![(17094174197873140035316532568922652294881600587639905417701074492648767414173:F), (8484251464872873032022789624790167173458682056313339863651348894878144808746:F), (10260366716129057466862964875306868898686918428814373470382979997177852668590:F), (549263552864476084904464374701167884060947403076520259964592729731619317724:F)] fun gate_58 =>
    halfRound_4_4 gate_58 vec![(10052714818439832487575851829190658679562445501271745818931448693381812170889:F), (1735373362835209096342827192021124337509188507323448903608623506589963950966:F), (7998373949540733111485892137806629484517602009122941425332571732658301689428:F), (9035170288660659483243066011612158174896974797912618405030929911180945246244:F)] fun gate_59 =>
    fullRound_4_4 gate_59 vec![(6458619567307414386633203375143968061892762498463026121155477954682976784731:F), (12314261817227551876673777186352972884847144237148169773300066404053441924532:F), (19869454329688183813243851218196625862680921049019496233616575272637276975230:F), (20326917073492686652690019138603910654692396590122884746951129061818467704300:F)] fun gate_60 =>
    fullRound_4_4 gate_60 vec![(20403270805536666081472738304916561119325397964511536801752236086414818653063:F), (2865941730880218719188224311916978807415673142487507504983320505748719154068:F), (20614246027521726470902405957496110178017768563127335842405314212897493119848:F), (12060194341463088508348622863463208827312128863463014006529428845777217660299:F)] fun gate_61 =>
    fullRound_4_4 gate_61 vec![(1128906798719793375274166820235650701301189774851381709919492584451845983197:F), (19670876372911656158743764425809421400123168087389888660308456184201759209723:F), (5647230694522866559497222129254930524469944430191328619422533907417776118543:F), (318629082509194371490189248876734616088516535434806492900653650176451776632:F)] fun gate_62 =>
    fullRound_4_4 gate_62 vec![(13685970881538585172319228162662520285656571966985351768743970447782846353365:F), (8283840607829148567836919316142994745766280854211662326632930274668867638198:F), (8968895518159422029900464138741638511289476298837958524156654785428413265371:F), (10061801991000917366002570579819627134666386452411986168205986791283562415829:F)] fun gate_63 =>
    k gate_63

def Poseidon3 (In1: F) (In2: F) (In3: F) (k: F -> Prop): Prop :=
    poseidon_4 vec![(0:F), In1, In2, In3] fun gate_0 =>
    k gate_0[0]

def LeafHashGadget (LeafLowerRangeValue: F) (NextIndex: F) (LeafHigherRangeValue: F) (Value: F) (k: F -> Prop): Prop :=
    AssertIsLess_248 LeafLowerRangeValue Value ∧
    AssertIsLess_248 Value LeafHigherRangeValue ∧
    Poseidon3 LeafLowerRangeValue NextIndex LeafHigherRangeValue fun gate_2 =>
    k gate_2

def NonInclusionProof_8_8_8_8_8_8_26_8_8_26 (Roots: Vector F 8) (Values: Vector F 8) (LeafLowerRangeValues: Vector F 8) (LeafHigherRangeValues: Vector F 8) (NextIndices: Vector F 8) (InPathIndices: Vector F 8) (InPathElements: Vector (Vector F 26) 8) (k: Vector F 8 -> Prop): Prop :=
    LeafHashGadget LeafLowerRangeValues[0] NextIndices[0] LeafHigherRangeValues[0] Values[0] fun gate_0 =>
    MerkleRootGadget_26_26 gate_0 InPathIndices[0] InPathElements[0] fun gate_1 =>
    Gates.eq gate_1 Roots[0] ∧
    LeafHashGadget LeafLowerRangeValues[1] NextIndices[1] LeafHigherRangeValues[1] Values[1] fun gate_3 =>
    MerkleRootGadget_26_26 gate_3 InPathIndices[1] InPathElements[1] fun gate_4 =>
    Gates.eq gate_4 Roots[1] ∧
    LeafHashGadget LeafLowerRangeValues[2] NextIndices[2] LeafHigherRangeValues[2] Values[2] fun gate_6 =>
    MerkleRootGadget_26_26 gate_6 InPathIndices[2] InPathElements[2] fun gate_7 =>
    Gates.eq gate_7 Roots[2] ∧
    LeafHashGadget LeafLowerRangeValues[3] NextIndices[3] LeafHigherRangeValues[3] Values[3] fun gate_9 =>
    MerkleRootGadget_26_26 gate_9 InPathIndices[3] InPathElements[3] fun gate_10 =>
    Gates.eq gate_10 Roots[3] ∧
    LeafHashGadget LeafLowerRangeValues[4] NextIndices[4] LeafHigherRangeValues[4] Values[4] fun gate_12 =>
    MerkleRootGadget_26_26 gate_12 InPathIndices[4] InPathElements[4] fun gate_13 =>
    Gates.eq gate_13 Roots[4] ∧
    LeafHashGadget LeafLowerRangeValues[5] NextIndices[5] LeafHigherRangeValues[5] Values[5] fun gate_15 =>
    MerkleRootGadget_26_26 gate_15 InPathIndices[5] InPathElements[5] fun gate_16 =>
    Gates.eq gate_16 Roots[5] ∧
    LeafHashGadget LeafLowerRangeValues[6] NextIndices[6] LeafHigherRangeValues[6] Values[6] fun gate_18 =>
    MerkleRootGadget_26_26 gate_18 InPathIndices[6] InPathElements[6] fun gate_19 =>
    Gates.eq gate_19 Roots[6] ∧
    LeafHashGadget LeafLowerRangeValues[7] NextIndices[7] LeafHigherRangeValues[7] Values[7] fun gate_21 =>
    MerkleRootGadget_26_26 gate_21 InPathIndices[7] InPathElements[7] fun gate_22 =>
    Gates.eq gate_22 Roots[7] ∧
    k vec![gate_1, gate_4, gate_7, gate_10, gate_13, gate_16, gate_19, gate_22]

def InclusionCircuit_8_8_8_26_8_8_26 (Roots: Vector F 8) (Leaves: Vector F 8) (InPathIndices: Vector F 8) (InPathElements: Vector (Vector F 26) 8): Prop :=
    InclusionProof_8_8_8_26_8_8_26 Roots Leaves InPathIndices InPathElements fun _ =>
    True

def NonInclusionCircuit_8_8_8_8_8_8_26_8_8_26 (Roots: Vector F 8) (Values: Vector F 8) (LeafLowerRangeValues: Vector F 8) (LeafHigherRangeValues: Vector F 8) (NextIndices: Vector F 8) (InPathIndices: Vector F 8) (InPathElements: Vector (Vector F 26) 8): Prop :=
    NonInclusionProof_8_8_8_8_8_8_26_8_8_26 Roots Values LeafLowerRangeValues LeafHigherRangeValues NextIndices InPathIndices InPathElements fun _ =>
    True

def CombinedCircuit_8_8_8_26_8_8_8_8_8_8_8_26_8 (Inclusion_Roots: Vector F 8) (Inclusion_Leaves: Vector F 8) (Inclusion_InPathIndices: Vector F 8) (Inclusion_InPathElements: Vector (Vector F 26) 8) (NonInclusion_Roots: Vector F 8) (NonInclusion_Values: Vector F 8) (NonInclusion_LeafLowerRangeValues: Vector F 8) (NonInclusion_LeafHigherRangeValues: Vector F 8) (NonInclusion_NextIndices: Vector F 8) (NonInclusion_InPathIndices: Vector F 8) (NonInclusion_InPathElements: Vector (Vector F 26) 8): Prop :=
    InclusionProof_8_8_8_26_8_8_26 Inclusion_Roots Inclusion_Leaves Inclusion_InPathIndices Inclusion_InPathElements fun _ =>
    NonInclusionProof_8_8_8_8_8_8_26_8_8_26 NonInclusion_Roots NonInclusion_Values NonInclusion_LeafLowerRangeValues NonInclusion_LeafHigherRangeValues NonInclusion_NextIndices NonInclusion_InPathIndices NonInclusion_InPathElements fun _ =>
    True

end LightProver